// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YellowCarrot_App.Data;

#nullable disable

namespace YellowCarrotApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221215085657_AddTag")]
    partial class AddTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YellowCarrot_App.Models.Ingrediens", b =>
                {
                    b.Property<int>("IngrediensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngrediensId"));

                    b.Property<string>("IngrediensNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngrediensId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredience");

                    b.HasData(
                        new
                        {
                            IngrediensId = 1,
                            IngrediensNamn = "Mjol",
                            Quantity = 500,
                            RecipeId = 1,
                            Unit = "gram"
                        },
                        new
                        {
                            IngrediensId = 2,
                            IngrediensNamn = "Kakao",
                            Quantity = 100,
                            RecipeId = 1,
                            Unit = "gram"
                        });
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("InfoRecept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreparingTime")
                        .HasColumnType("int");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            RecipeName = "Muffins",
                            TagName = "Desert"
                        });
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Step", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("StepTime")
                        .HasColumnType("int");

                    b.HasKey("StepId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Step");
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Tags", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TagName");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagName = "Desert"
                        },
                        new
                        {
                            TagName = "Pasta"
                        });
                });

            modelBuilder.Entity("YellowCarrot_App.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "password",
                            UserNamn = "user"
                        });
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Ingrediens", b =>
                {
                    b.HasOne("YellowCarrot_App.Models.Recipe", "Recipe")
                        .WithMany("Ingrediences")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Step", b =>
                {
                    b.HasOne("YellowCarrot_App.Models.Recipe", null)
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("YellowCarrot_App.Models.Recipe", b =>
                {
                    b.Navigation("Ingrediences");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
